<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="422" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="405.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="405.00"> </text><svg id="frames" x="10" width="1180" total_samples="5678"><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.12%)</title><rect x="0.0000%" y="245" width="0.1233%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="255.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::process_action (1 samples, 0.02%)</title><rect x="0.1409%" y="213" width="0.0176%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="1"/><text x="0.3909%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::check_treasure_at (1 samples, 0.02%)</title><rect x="0.1409%" y="197" width="0.0176%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="1"/><text x="0.3909%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (1 samples, 0.02%)</title><rect x="0.1409%" y="181" width="0.0176%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="1"/><text x="0.3909%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (1 samples, 0.02%)</title><rect x="0.1585%" y="197" width="0.0176%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="1"/><text x="0.4085%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (2 samples, 0.04%)</title><rect x="0.2818%" y="181" width="0.0352%" height="15" fill="rgb(232,128,0)" fg:x="16" fg:w="2"/><text x="0.5318%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (1 samples, 0.02%)</title><rect x="0.4403%" y="165" width="0.0176%" height="15" fill="rgb(207,160,47)" fg:x="25" fg:w="1"/><text x="0.6903%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="0.4579%" y="165" width="0.0176%" height="15" fill="rgb(228,23,34)" fg:x="26" fg:w="1"/><text x="0.7079%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;tigris_and_euphrates::solver::TnEMove as minimax::interface::Move&gt;::apply (26 samples, 0.46%)</title><rect x="0.1233%" y="245" width="0.4579%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="26"/><text x="0.3733%" y="255.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::process (26 samples, 0.46%)</title><rect x="0.1233%" y="229" width="0.4579%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="26"/><text x="0.3733%" y="239.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::validate_action (24 samples, 0.42%)</title><rect x="0.1585%" y="213" width="0.4227%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="24"/><text x="0.4085%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::nearby_kingdom_count (23 samples, 0.41%)</title><rect x="0.1761%" y="197" width="0.4051%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="23"/><text x="0.4261%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (15 samples, 0.26%)</title><rect x="0.3170%" y="181" width="0.2642%" height="15" fill="rgb(216,20,37)" fg:x="18" fg:w="15"/><text x="0.5670%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (6 samples, 0.11%)</title><rect x="0.4755%" y="165" width="0.1057%" height="15" fill="rgb(206,188,39)" fg:x="27" fg:w="6"/><text x="0.7255%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="0.5636%" y="149" width="0.0176%" height="15" fill="rgb(217,207,13)" fg:x="32" fg:w="1"/><text x="0.8136%" y="159.50"></text></g><g><title>tigris-and-euphrates`core::ptr::drop_in_place&lt;tigris_and_euphrates::game::TnEGame&gt; (2 samples, 0.04%)</title><rect x="0.5812%" y="245" width="0.0352%" height="15" fill="rgb(231,73,38)" fg:x="33" fg:w="2"/><text x="0.8312%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.05%)</title><rect x="0.6340%" y="229" width="0.0528%" height="15" fill="rgb(225,20,46)" fg:x="36" fg:w="3"/><text x="0.8840%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="0.6869%" y="229" width="0.0176%" height="15" fill="rgb(210,31,41)" fg:x="39" fg:w="1"/><text x="0.9369%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.05%)</title><rect x="0.7045%" y="229" width="0.0528%" height="15" fill="rgb(221,200,47)" fg:x="40" fg:w="3"/><text x="0.9545%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.07%)</title><rect x="0.7573%" y="229" width="0.0704%" height="15" fill="rgb(226,26,5)" fg:x="43" fg:w="4"/><text x="1.0073%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.23%)</title><rect x="0.8278%" y="229" width="0.2290%" height="15" fill="rgb(249,33,26)" fg:x="47" fg:w="13"/><text x="1.0778%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.04%)</title><rect x="1.1800%" y="213" width="0.0352%" height="15" fill="rgb(235,183,28)" fg:x="67" fg:w="2"/><text x="1.4300%" y="223.50"></text></g><g><title>tigris-and-euphrates`&lt;tigris_and_euphrates::game::TnEGame as core::clone::Clone&gt;::clone (10 samples, 0.18%)</title><rect x="1.0567%" y="229" width="0.1761%" height="15" fill="rgb(221,5,38)" fg:x="60" fg:w="10"/><text x="1.3067%" y="239.50"></text></g><g><title>tigris-and-euphrates`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.2152%" y="213" width="0.0176%" height="15" fill="rgb(247,18,42)" fg:x="69" fg:w="1"/><text x="1.4652%" y="223.50"></text></g><g><title>tigris-and-euphrates`core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.02%)</title><rect x="1.2328%" y="213" width="0.0176%" height="15" fill="rgb(241,131,45)" fg:x="70" fg:w="1"/><text x="1.4828%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="1.3737%" y="197" width="0.0176%" height="15" fill="rgb(249,31,29)" fg:x="78" fg:w="1"/><text x="1.6237%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitAndAssign&gt;::bitand_assign (2 samples, 0.04%)</title><rect x="1.3913%" y="197" width="0.0352%" height="15" fill="rgb(225,111,53)" fg:x="79" fg:w="2"/><text x="1.6413%" y="207.50"></text></g><g><title>tigris-and-euphrates`DYLD-STUB$$realloc (1 samples, 0.02%)</title><rect x="1.4442%" y="181" width="0.0176%" height="15" fill="rgb(238,160,17)" fg:x="82" fg:w="1"/><text x="1.6942%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.04%)</title><rect x="1.4618%" y="165" width="0.0352%" height="15" fill="rgb(214,148,48)" fg:x="83" fg:w="2"/><text x="1.7118%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="1.5322%" y="133" width="0.0352%" height="15" fill="rgb(232,36,49)" fg:x="87" fg:w="2"/><text x="1.7822%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="1.5675%" y="117" width="0.0176%" height="15" fill="rgb(209,103,24)" fg:x="89" fg:w="1"/><text x="1.8175%" y="127.50"></text></g><g><title>tigris-and-euphrates`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.18%)</title><rect x="1.4266%" y="197" width="0.1761%" height="15" fill="rgb(229,88,8)" fg:x="81" fg:w="10"/><text x="1.6766%" y="207.50"></text></g><g><title>tigris-and-euphrates`alloc::raw_vec::finish_grow (8 samples, 0.14%)</title><rect x="1.4618%" y="181" width="0.1409%" height="15" fill="rgb(213,181,19)" fg:x="83" fg:w="8"/><text x="1.7118%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.11%)</title><rect x="1.4970%" y="165" width="0.1057%" height="15" fill="rgb(254,191,54)" fg:x="85" fg:w="6"/><text x="1.7470%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.07%)</title><rect x="1.5322%" y="149" width="0.0704%" height="15" fill="rgb(241,83,37)" fg:x="87" fg:w="4"/><text x="1.7822%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.04%)</title><rect x="1.5675%" y="133" width="0.0352%" height="15" fill="rgb(233,36,39)" fg:x="89" fg:w="2"/><text x="1.8175%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="1.5851%" y="117" width="0.0176%" height="15" fill="rgb(226,3,54)" fg:x="90" fg:w="1"/><text x="1.8351%" y="127.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (3 samples, 0.05%)</title><rect x="1.6027%" y="197" width="0.0528%" height="15" fill="rgb(245,192,40)" fg:x="91" fg:w="3"/><text x="1.8527%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Tiles::player_draw (2 samples, 0.04%)</title><rect x="1.6555%" y="197" width="0.0352%" height="15" fill="rgb(238,167,29)" fg:x="94" fg:w="2"/><text x="1.9055%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::check_leader_placement (2 samples, 0.04%)</title><rect x="1.6907%" y="197" width="0.0352%" height="15" fill="rgb(232,182,51)" fg:x="96" fg:w="2"/><text x="1.9407%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="1.8845%" y="181" width="0.0176%" height="15" fill="rgb(231,60,39)" fg:x="107" fg:w="1"/><text x="2.1345%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.04%)</title><rect x="1.9021%" y="181" width="0.0352%" height="15" fill="rgb(208,69,12)" fg:x="108" fg:w="2"/><text x="2.1521%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.9373%" y="181" width="0.0176%" height="15" fill="rgb(235,93,37)" fg:x="110" fg:w="1"/><text x="2.1873%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitOrAssign&gt;::bitor_assign (1 samples, 0.02%)</title><rect x="2.0254%" y="165" width="0.0176%" height="15" fill="rgb(213,116,39)" fg:x="115" fg:w="1"/><text x="2.2754%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (1 samples, 0.02%)</title><rect x="2.0430%" y="165" width="0.0176%" height="15" fill="rgb(222,207,29)" fg:x="116" fg:w="1"/><text x="2.2930%" y="175.50"></text></g><g><title>tigris-and-euphrates`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="2.0606%" y="165" width="0.0176%" height="15" fill="rgb(206,96,30)" fg:x="117" fg:w="1"/><text x="2.3106%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="2.0606%" y="149" width="0.0176%" height="15" fill="rgb(218,138,4)" fg:x="117" fg:w="1"/><text x="2.3106%" y="159.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (2 samples, 0.04%)</title><rect x="2.0782%" y="165" width="0.0352%" height="15" fill="rgb(250,191,14)" fg:x="118" fg:w="2"/><text x="2.3282%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="2.3248%" y="149" width="0.0176%" height="15" fill="rgb(239,60,40)" fg:x="132" fg:w="1"/><text x="2.5748%" y="159.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::neighboring_kingdoms (30 samples, 0.53%)</title><rect x="1.9549%" y="181" width="0.5284%" height="15" fill="rgb(206,27,48)" fg:x="111" fg:w="30"/><text x="2.2049%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (21 samples, 0.37%)</title><rect x="2.1134%" y="165" width="0.3698%" height="15" fill="rgb(225,35,8)" fg:x="120" fg:w="21"/><text x="2.3634%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (8 samples, 0.14%)</title><rect x="2.3424%" y="149" width="0.1409%" height="15" fill="rgb(250,213,24)" fg:x="133" fg:w="8"/><text x="2.5924%" y="159.50"></text></g><g><title>tigris-and-euphrates`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.05%)</title><rect x="2.5713%" y="165" width="0.0528%" height="15" fill="rgb(247,123,22)" fg:x="146" fg:w="3"/><text x="2.8213%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="2.6066%" y="149" width="0.0176%" height="15" fill="rgb(231,138,38)" fg:x="148" fg:w="1"/><text x="2.8566%" y="159.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;usize&gt;&gt;::from (1 samples, 0.02%)</title><rect x="2.6242%" y="165" width="0.0176%" height="15" fill="rgb(231,145,46)" fg:x="149" fg:w="1"/><text x="2.8742%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitOrAssign&gt;::bitor_assign (4 samples, 0.07%)</title><rect x="2.8003%" y="149" width="0.0704%" height="15" fill="rgb(251,118,11)" fg:x="159" fg:w="4"/><text x="3.0503%" y="159.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (8 samples, 0.14%)</title><rect x="2.8707%" y="149" width="0.1409%" height="15" fill="rgb(217,147,25)" fg:x="163" fg:w="8"/><text x="3.1207%" y="159.50"></text></g><g><title>tigris-and-euphrates`__rdl_alloc (1 samples, 0.02%)</title><rect x="3.0116%" y="133" width="0.0176%" height="15" fill="rgb(247,81,37)" fg:x="171" fg:w="1"/><text x="3.2616%" y="143.50"></text></g><g><title>tigris-and-euphrates`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="3.0116%" y="149" width="0.0352%" height="15" fill="rgb(209,12,38)" fg:x="171" fg:w="2"/><text x="3.2616%" y="159.50"></text></g><g><title>tigris-and-euphrates`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="3.0292%" y="133" width="0.0176%" height="15" fill="rgb(227,1,9)" fg:x="172" fg:w="1"/><text x="3.2792%" y="143.50"></text></g><g><title>tigris-and-euphrates`primitive_types::U256::trailing_zeros (1 samples, 0.02%)</title><rect x="3.0468%" y="149" width="0.0176%" height="15" fill="rgb(248,47,43)" fg:x="173" fg:w="1"/><text x="3.2968%" y="159.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (4 samples, 0.07%)</title><rect x="3.0645%" y="149" width="0.0704%" height="15" fill="rgb(221,10,30)" fg:x="174" fg:w="4"/><text x="3.3145%" y="159.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (1 samples, 0.02%)</title><rect x="4.0859%" y="133" width="0.0176%" height="15" fill="rgb(210,229,1)" fg:x="232" fg:w="1"/><text x="4.3359%" y="143.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (17 samples, 0.30%)</title><rect x="4.1036%" y="133" width="0.2994%" height="15" fill="rgb(222,148,37)" fg:x="233" fg:w="17"/><text x="4.3536%" y="143.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (130 samples, 2.29%)</title><rect x="3.1349%" y="149" width="2.2895%" height="15" fill="rgb(234,67,33)" fg:x="178" fg:w="130"/><text x="3.3849%" y="159.50">t..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (58 samples, 1.02%)</title><rect x="4.4030%" y="133" width="1.0215%" height="15" fill="rgb(247,98,35)" fg:x="250" fg:w="58"/><text x="4.6530%" y="143.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (10 samples, 0.18%)</title><rect x="5.2483%" y="117" width="0.1761%" height="15" fill="rgb(247,138,52)" fg:x="298" fg:w="10"/><text x="5.4983%" y="127.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::check_internal_conflict (168 samples, 2.96%)</title><rect x="2.4833%" y="181" width="2.9588%" height="15" fill="rgb(213,79,30)" fg:x="141" fg:w="168"/><text x="2.7333%" y="191.50">tig..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::neighboring_kingdoms (159 samples, 2.80%)</title><rect x="2.6418%" y="165" width="2.8003%" height="15" fill="rgb(246,177,23)" fg:x="150" fg:w="159"/><text x="2.8918%" y="175.50">ti..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (1 samples, 0.02%)</title><rect x="5.4244%" y="149" width="0.0176%" height="15" fill="rgb(230,62,27)" fg:x="308" fg:w="1"/><text x="5.6744%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="5.4773%" y="165" width="0.0176%" height="15" fill="rgb(216,154,8)" fg:x="311" fg:w="1"/><text x="5.7273%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::check_monument (4 samples, 0.07%)</title><rect x="5.4421%" y="181" width="0.0704%" height="15" fill="rgb(244,35,45)" fg:x="309" fg:w="4"/><text x="5.6921%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="5.4949%" y="165" width="0.0176%" height="15" fill="rgb(251,115,12)" fg:x="312" fg:w="1"/><text x="5.7449%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (1 samples, 0.02%)</title><rect x="5.5301%" y="165" width="0.0176%" height="15" fill="rgb(240,54,50)" fg:x="314" fg:w="1"/><text x="5.7801%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (2 samples, 0.04%)</title><rect x="5.5477%" y="165" width="0.0352%" height="15" fill="rgb(233,84,52)" fg:x="315" fg:w="2"/><text x="5.7977%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (1 samples, 0.02%)</title><rect x="5.7943%" y="149" width="0.0176%" height="15" fill="rgb(207,117,47)" fg:x="329" fg:w="1"/><text x="6.0443%" y="159.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::check_treasure_at (41 samples, 0.72%)</title><rect x="5.5125%" y="181" width="0.7221%" height="15" fill="rgb(249,43,39)" fg:x="313" fg:w="41"/><text x="5.7625%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (37 samples, 0.65%)</title><rect x="5.5830%" y="165" width="0.6516%" height="15" fill="rgb(209,38,44)" fg:x="317" fg:w="37"/><text x="5.8330%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (24 samples, 0.42%)</title><rect x="5.8119%" y="149" width="0.4227%" height="15" fill="rgb(236,212,23)" fg:x="330" fg:w="24"/><text x="6.0619%" y="159.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (5 samples, 0.09%)</title><rect x="6.1465%" y="133" width="0.0881%" height="15" fill="rgb(242,79,21)" fg:x="349" fg:w="5"/><text x="6.3965%" y="143.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::process_action (257 samples, 4.53%)</title><rect x="1.7260%" y="197" width="4.5262%" height="15" fill="rgb(211,96,35)" fg:x="98" fg:w="257"/><text x="1.9760%" y="207.50">tigri..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::evict_leader (1 samples, 0.02%)</title><rect x="6.2346%" y="181" width="0.0176%" height="15" fill="rgb(253,215,40)" fg:x="354" fg:w="1"/><text x="6.4846%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;usize&gt;&gt;::from (1 samples, 0.02%)</title><rect x="6.3931%" y="181" width="0.0176%" height="15" fill="rgb(211,81,21)" fg:x="363" fg:w="1"/><text x="6.6431%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitAndAssign&gt;::bitand_assign (1 samples, 0.02%)</title><rect x="6.4107%" y="181" width="0.0176%" height="15" fill="rgb(208,190,38)" fg:x="364" fg:w="1"/><text x="6.6607%" y="191.50"></text></g><g><title>tigris-and-euphrates`primitive_types::U256::trailing_zeros (3 samples, 0.05%)</title><rect x="6.4283%" y="181" width="0.0528%" height="15" fill="rgb(235,213,38)" fg:x="365" fg:w="3"/><text x="6.6783%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (3 samples, 0.05%)</title><rect x="6.4812%" y="181" width="0.0528%" height="15" fill="rgb(237,122,38)" fg:x="368" fg:w="3"/><text x="6.7312%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (34 samples, 0.60%)</title><rect x="6.5340%" y="181" width="0.5988%" height="15" fill="rgb(244,218,35)" fg:x="371" fg:w="34"/><text x="6.7840%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 1.41%)</title><rect x="20.0775%" y="165" width="1.4089%" height="15" fill="rgb(240,68,47)" fg:x="1140" fg:w="80"/><text x="20.3275%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (31 samples, 0.55%)</title><rect x="20.9405%" y="149" width="0.5460%" height="15" fill="rgb(210,16,53)" fg:x="1189" fg:w="31"/><text x="21.1905%" y="159.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (39 samples, 0.69%)</title><rect x="21.4864%" y="165" width="0.6869%" height="15" fill="rgb(235,124,12)" fg:x="1220" fg:w="39"/><text x="21.7364%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;usize&gt;&gt;::from (2 samples, 0.04%)</title><rect x="22.1733%" y="165" width="0.0352%" height="15" fill="rgb(224,169,11)" fg:x="1259" fg:w="2"/><text x="22.4233%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitAndAssign&gt;::bitand_assign (16 samples, 0.28%)</title><rect x="22.2085%" y="165" width="0.2818%" height="15" fill="rgb(250,166,2)" fg:x="1261" fg:w="16"/><text x="22.4585%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitOrAssign&gt;::bitor_assign (30 samples, 0.53%)</title><rect x="22.4903%" y="165" width="0.5284%" height="15" fill="rgb(242,216,29)" fg:x="1277" fg:w="30"/><text x="22.7403%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (4 samples, 0.07%)</title><rect x="23.0187%" y="165" width="0.0704%" height="15" fill="rgb(230,116,27)" fg:x="1307" fg:w="4"/><text x="23.2687%" y="175.50"></text></g><g><title>tigris-and-euphrates`primitive_types::U256::trailing_zeros (10 samples, 0.18%)</title><rect x="23.0891%" y="165" width="0.1761%" height="15" fill="rgb(228,99,48)" fg:x="1311" fg:w="10"/><text x="23.3391%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (102 samples, 1.80%)</title><rect x="23.2652%" y="165" width="1.7964%" height="15" fill="rgb(253,11,6)" fg:x="1321" fg:w="102"/><text x="23.5152%" y="175.50">t..</text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (23 samples, 0.41%)</title><rect x="46.8123%" y="149" width="0.4051%" height="15" fill="rgb(247,143,39)" fg:x="2658" fg:w="23"/><text x="47.0623%" y="159.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (22 samples, 0.39%)</title><rect x="47.2173%" y="149" width="0.3875%" height="15" fill="rgb(236,97,10)" fg:x="2681" fg:w="22"/><text x="47.4673%" y="159.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (321 samples, 5.65%)</title><rect x="47.6048%" y="149" width="5.6534%" height="15" fill="rgb(233,208,19)" fg:x="2703" fg:w="321"/><text x="47.8548%" y="159.50">tigris-..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (2,840 samples, 50.02%)</title><rect x="25.0616%" y="165" width="50.0176%" height="15" fill="rgb(216,164,2)" fg:x="1423" fg:w="2840"/><text x="25.3116%" y="175.50">tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (1,239 samples, 21.82%)</title><rect x="53.2582%" y="149" width="21.8211%" height="15" fill="rgb(220,129,5)" fg:x="3024" fg:w="1239"/><text x="53.5082%" y="159.50">tigris-and-euphrates`tigris_and_eu..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (258 samples, 4.54%)</title><rect x="70.5354%" y="133" width="4.5439%" height="15" fill="rgb(242,17,10)" fg:x="4005" fg:w="258"/><text x="70.7854%" y="143.50">tigri..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::nearby_kingdom_count (3,860 samples, 67.98%)</title><rect x="7.1328%" y="181" width="67.9817%" height="15" fill="rgb(242,107,0)" fg:x="405" fg:w="3860"/><text x="7.3828%" y="191.50">tigris-and-euphrates`tigris_and_euphrates::game::Board::nearby_kingdom_count</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (2 samples, 0.04%)</title><rect x="75.0793%" y="165" width="0.0352%" height="15" fill="rgb(251,28,31)" fg:x="4263" fg:w="2"/><text x="75.3293%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (1 samples, 0.02%)</title><rect x="75.1321%" y="165" width="0.0176%" height="15" fill="rgb(233,223,10)" fg:x="4266" fg:w="1"/><text x="75.3821%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::path_find (4 samples, 0.07%)</title><rect x="75.1145%" y="181" width="0.0704%" height="15" fill="rgb(215,21,27)" fg:x="4265" fg:w="4"/><text x="75.3645%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (2 samples, 0.04%)</title><rect x="75.1497%" y="165" width="0.0352%" height="15" fill="rgb(232,23,21)" fg:x="4267" fg:w="2"/><text x="75.3997%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="75.1673%" y="149" width="0.0176%" height="15" fill="rgb(244,5,23)" fg:x="4268" fg:w="1"/><text x="75.4173%" y="159.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::PlayerState::get_hand (1 samples, 0.02%)</title><rect x="75.1849%" y="181" width="0.0176%" height="15" fill="rgb(226,81,46)" fg:x="4269" fg:w="1"/><text x="75.4349%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitAndAssign&gt;::bitand_assign (1 samples, 0.02%)</title><rect x="75.2025%" y="165" width="0.0176%" height="15" fill="rgb(247,70,30)" fg:x="4270" fg:w="1"/><text x="75.4525%" y="175.50"></text></g><g><title>tigris-and-euphrates`primitive_types::U256::trailing_zeros (5 samples, 0.09%)</title><rect x="75.2201%" y="165" width="0.0881%" height="15" fill="rgb(212,68,19)" fg:x="4271" fg:w="5"/><text x="75.4701%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="75.3082%" y="165" width="0.0176%" height="15" fill="rgb(240,187,13)" fg:x="4276" fg:w="1"/><text x="75.5582%" y="175.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::process (4,222 samples, 74.36%)</title><rect x="1.2504%" y="213" width="74.3572%" height="15" fill="rgb(223,113,26)" fg:x="71" fg:w="4222"/><text x="1.5004%" y="223.50">tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::process</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::validate_action (3,938 samples, 69.36%)</title><rect x="6.2522%" y="197" width="69.3554%" height="15" fill="rgb(206,192,2)" fg:x="355" fg:w="3938"/><text x="6.5022%" y="207.50">tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::validate_action</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::check_leader_placement (23 samples, 0.41%)</title><rect x="75.2025%" y="181" width="0.4051%" height="15" fill="rgb(241,108,4)" fg:x="4270" fg:w="23"/><text x="75.4525%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::adjacent_to_temple (16 samples, 0.28%)</title><rect x="75.3258%" y="165" width="0.2818%" height="15" fill="rgb(247,173,49)" fg:x="4277" fg:w="16"/><text x="75.5758%" y="175.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (12 samples, 0.21%)</title><rect x="75.3963%" y="149" width="0.2113%" height="15" fill="rgb(224,114,35)" fg:x="4281" fg:w="12"/><text x="75.6463%" y="159.50"></text></g><g><title>tigris-and-euphrates`&lt;tigris_and_euphrates::solver::TnEMove as minimax::interface::Move&gt;::apply (4,224 samples, 74.39%)</title><rect x="1.2328%" y="229" width="74.3924%" height="15" fill="rgb(245,159,27)" fg:x="70" fg:w="4224"/><text x="1.4828%" y="239.50">tigris-and-euphrates`&lt;tigris_and_euphrates::solver::TnEMove as minimax::interface::Move&gt;::apply</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::TnEGame::process_action (1 samples, 0.02%)</title><rect x="75.6076%" y="213" width="0.0176%" height="15" fill="rgb(245,172,44)" fg:x="4293" fg:w="1"/><text x="75.8576%" y="223.50"></text></g><g><title>tigris-and-euphrates`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="75.6252%" y="229" width="0.0176%" height="15" fill="rgb(236,23,11)" fg:x="4294" fg:w="1"/><text x="75.8752%" y="239.50"></text></g><g><title>tigris-and-euphrates`DYLD-STUB$$memcpy (2 samples, 0.04%)</title><rect x="75.6428%" y="229" width="0.0352%" height="15" fill="rgb(205,117,38)" fg:x="4295" fg:w="2"/><text x="75.8928%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="75.7309%" y="213" width="0.0176%" height="15" fill="rgb(237,72,25)" fg:x="4300" fg:w="1"/><text x="75.9809%" y="223.50"></text></g><g><title>tigris-and-euphrates`core::ptr::drop_in_place&lt;tigris_and_euphrates::game::TnEGame&gt; (8 samples, 0.14%)</title><rect x="75.6781%" y="229" width="0.1409%" height="15" fill="rgb(244,70,9)" fg:x="4297" fg:w="8"/><text x="75.9281%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.07%)</title><rect x="75.7485%" y="213" width="0.0704%" height="15" fill="rgb(217,125,39)" fg:x="4301" fg:w="4"/><text x="75.9985%" y="223.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;usize&gt;&gt;::from (2 samples, 0.04%)</title><rect x="75.8190%" y="213" width="0.0352%" height="15" fill="rgb(235,36,10)" fg:x="4305" fg:w="2"/><text x="76.0690%" y="223.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitAndAssign&gt;::bitand_assign (4 samples, 0.07%)</title><rect x="75.8542%" y="213" width="0.0704%" height="15" fill="rgb(251,123,47)" fg:x="4307" fg:w="4"/><text x="76.1042%" y="223.50"></text></g><g><title>tigris-and-euphrates`primitive_types::U256::trailing_zeros (15 samples, 0.26%)</title><rect x="75.9246%" y="213" width="0.2642%" height="15" fill="rgb(221,13,13)" fg:x="4311" fg:w="15"/><text x="76.1746%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (3 samples, 0.05%)</title><rect x="76.1888%" y="213" width="0.0528%" height="15" fill="rgb(238,131,9)" fg:x="4326" fg:w="3"/><text x="76.4388%" y="223.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (4 samples, 0.07%)</title><rect x="77.9676%" y="197" width="0.0704%" height="15" fill="rgb(211,50,8)" fg:x="4427" fg:w="4"/><text x="78.2176%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitAndAssign&gt;::bitand_assign (5 samples, 0.09%)</title><rect x="78.0380%" y="197" width="0.0881%" height="15" fill="rgb(245,182,24)" fg:x="4431" fg:w="5"/><text x="78.2880%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::BitOrAssign&gt;::bitor_assign (33 samples, 0.58%)</title><rect x="78.1261%" y="197" width="0.5812%" height="15" fill="rgb(242,14,37)" fg:x="4436" fg:w="33"/><text x="78.3761%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (53 samples, 0.93%)</title><rect x="78.7073%" y="197" width="0.9334%" height="15" fill="rgb(246,228,12)" fg:x="4469" fg:w="53"/><text x="78.9573%" y="207.50"></text></g><g><title>tigris-and-euphrates`primitive_types::U256::trailing_zeros (2 samples, 0.04%)</title><rect x="79.6407%" y="197" width="0.0352%" height="15" fill="rgb(213,55,15)" fg:x="4522" fg:w="2"/><text x="79.8907%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (27 samples, 0.48%)</title><rect x="79.6759%" y="197" width="0.4755%" height="15" fill="rgb(209,9,3)" fg:x="4524" fg:w="27"/><text x="79.9259%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (7 samples, 0.12%)</title><rect x="86.1219%" y="181" width="0.1233%" height="15" fill="rgb(230,59,30)" fg:x="4890" fg:w="7"/><text x="86.3719%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (16 samples, 0.28%)</title><rect x="86.2452%" y="181" width="0.2818%" height="15" fill="rgb(209,121,21)" fg:x="4897" fg:w="16"/><text x="86.4952%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (109 samples, 1.92%)</title><rect x="86.5269%" y="181" width="1.9197%" height="15" fill="rgb(220,109,13)" fg:x="4913" fg:w="109"/><text x="86.7769%" y="191.50">t..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (983 samples, 17.31%)</title><rect x="80.1515%" y="197" width="17.3124%" height="15" fill="rgb(232,18,1)" fg:x="4551" fg:w="983"/><text x="80.4015%" y="207.50">tigris-and-euphrates`tigris..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (512 samples, 9.02%)</title><rect x="88.4466%" y="181" width="9.0173%" height="15" fill="rgb(215,41,42)" fg:x="5022" fg:w="512"/><text x="88.6966%" y="191.50">tigris-and-eu..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (89 samples, 1.57%)</title><rect x="95.8964%" y="165" width="1.5675%" height="15" fill="rgb(224,123,36)" fg:x="5445" fg:w="89"/><text x="96.1464%" y="175.50"></text></g><g><title>tigris-and-euphrates`minimax::strategies::negamax::Negamax&lt;E&gt;::negamax (1,242 samples, 21.87%)</title><rect x="75.8190%" y="229" width="21.8739%" height="15" fill="rgb(240,125,3)" fg:x="4305" fg:w="1242"/><text x="76.0690%" y="239.50">tigris-and-euphrates`minimax::strat..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::PlayerState::get_eval (1,218 samples, 21.45%)</title><rect x="76.2416%" y="213" width="21.4512%" height="15" fill="rgb(205,98,50)" fg:x="4329" fg:w="1218"/><text x="76.4916%" y="223.50">tigris-and-euphrates`tigris_and_eu..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (13 samples, 0.23%)</title><rect x="97.4639%" y="197" width="0.2290%" height="15" fill="rgb(205,185,37)" fg:x="5534" fg:w="13"/><text x="97.7139%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="97.6928%" y="213" width="0.0176%" height="15" fill="rgb(238,207,15)" fg:x="5547" fg:w="1"/><text x="97.9428%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.16%)</title><rect x="97.7105%" y="213" width="0.1585%" height="15" fill="rgb(213,199,42)" fg:x="5548" fg:w="9"/><text x="97.9605%" y="223.50"></text></g><g><title>tigris-and-euphrates`minimax::util::MovePool&lt;M&gt;::free (16 samples, 0.28%)</title><rect x="97.6928%" y="229" width="0.2818%" height="15" fill="rgb(235,201,11)" fg:x="5547" fg:w="16"/><text x="97.9428%" y="239.50"></text></g><g><title>tigris-and-euphrates`core::ptr::drop_in_place&lt;tigris_and_euphrates::game::TnEGame&gt; (6 samples, 0.11%)</title><rect x="97.8690%" y="213" width="0.1057%" height="15" fill="rgb(207,46,11)" fg:x="5557" fg:w="6"/><text x="98.1190%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.09%)</title><rect x="97.8866%" y="197" width="0.0881%" height="15" fill="rgb(241,35,35)" fg:x="5558" fg:w="5"/><text x="98.1366%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="98.3093%" y="213" width="0.0352%" height="15" fill="rgb(243,32,47)" fg:x="5582" fg:w="2"/><text x="98.5593%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.09%)</title><rect x="98.3445%" y="213" width="0.0881%" height="15" fill="rgb(247,202,23)" fg:x="5584" fg:w="5"/><text x="98.5945%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.12%)</title><rect x="98.4325%" y="213" width="0.1233%" height="15" fill="rgb(219,102,11)" fg:x="5589" fg:w="7"/><text x="98.6825%" y="223.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (3 samples, 0.05%)</title><rect x="98.5558%" y="213" width="0.0528%" height="15" fill="rgb(243,110,44)" fg:x="5596" fg:w="3"/><text x="98.8058%" y="223.50"></text></g><g><title>tigris-and-euphrates`&lt;tigris_and_euphrates::game::TnEGame as core::clone::Clone&gt;::clone (10 samples, 0.18%)</title><rect x="98.6087%" y="213" width="0.1761%" height="15" fill="rgb(222,74,54)" fg:x="5599" fg:w="10"/><text x="98.8587%" y="223.50"></text></g><g><title>tigris-and-euphrates`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="98.7496%" y="197" width="0.0352%" height="15" fill="rgb(216,99,12)" fg:x="5607" fg:w="2"/><text x="98.9996%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="98.7848%" y="213" width="0.0176%" height="15" fill="rgb(226,22,26)" fg:x="5609" fg:w="1"/><text x="99.0348%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (2 samples, 0.04%)</title><rect x="98.8024%" y="213" width="0.0352%" height="15" fill="rgb(217,163,10)" fg:x="5610" fg:w="2"/><text x="99.0524%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="98.8200%" y="197" width="0.0176%" height="15" fill="rgb(213,25,53)" fg:x="5611" fg:w="1"/><text x="99.0700%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="98.8905%" y="197" width="0.0352%" height="15" fill="rgb(252,105,26)" fg:x="5615" fg:w="2"/><text x="99.1405%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (1 samples, 0.02%)</title><rect x="98.9081%" y="181" width="0.0176%" height="15" fill="rgb(220,39,43)" fg:x="5616" fg:w="1"/><text x="99.1581%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (3 samples, 0.05%)</title><rect x="99.1194%" y="181" width="0.0528%" height="15" fill="rgb(229,68,48)" fg:x="5628" fg:w="3"/><text x="99.3694%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::nearby_kingdom_count (24 samples, 0.42%)</title><rect x="98.8376%" y="213" width="0.4227%" height="15" fill="rgb(252,8,32)" fg:x="5612" fg:w="24"/><text x="99.0876%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (19 samples, 0.33%)</title><rect x="98.9257%" y="197" width="0.3346%" height="15" fill="rgb(223,20,43)" fg:x="5617" fg:w="19"/><text x="99.1757%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (5 samples, 0.09%)</title><rect x="99.1722%" y="181" width="0.0881%" height="15" fill="rgb(229,81,49)" fg:x="5631" fg:w="5"/><text x="99.4222%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::convert::From&lt;i32&gt;&gt;::from (1 samples, 0.02%)</title><rect x="99.3131%" y="197" width="0.0176%" height="15" fill="rgb(236,28,36)" fg:x="5639" fg:w="1"/><text x="99.5631%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (1 samples, 0.02%)</title><rect x="99.3308%" y="197" width="0.0176%" height="15" fill="rgb(249,185,26)" fg:x="5640" fg:w="1"/><text x="99.5808%" y="207.50"></text></g><g><title>tigris-and-euphrates`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="99.3484%" y="197" width="0.0352%" height="15" fill="rgb(249,174,33)" fg:x="5641" fg:w="2"/><text x="99.5984%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="99.3660%" y="181" width="0.0176%" height="15" fill="rgb(233,201,37)" fg:x="5642" fg:w="1"/><text x="99.6160%" y="191.50"></text></g><g><title>tigris-and-euphrates`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.3836%" y="197" width="0.0176%" height="15" fill="rgb(221,78,26)" fg:x="5643" fg:w="1"/><text x="99.6336%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="99.4012%" y="197" width="0.0176%" height="15" fill="rgb(250,127,30)" fg:x="5644" fg:w="1"/><text x="99.6512%" y="207.50"></text></g><g><title>tigris-and-euphrates`&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (1 samples, 0.02%)</title><rect x="99.6830%" y="181" width="0.0176%" height="15" fill="rgb(230,49,44)" fg:x="5660" fg:w="1"/><text x="99.9330%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (1 samples, 0.02%)</title><rect x="99.7006%" y="181" width="0.0176%" height="15" fill="rgb(229,67,23)" fg:x="5661" fg:w="1"/><text x="99.9506%" y="191.50"></text></g><g><title>tigris-and-euphrates`minimax::strategies::negamax::Negamax&lt;E&gt;::negamax (5,640 samples, 99.33%)</title><rect x="0.6164%" y="245" width="99.3308%" height="15" fill="rgb(249,83,47)" fg:x="35" fg:w="5640"/><text x="0.8664%" y="255.50">tigris-and-euphrates`minimax::strategies::negamax::Negamax&lt;E&gt;::negamax</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::solver::_&lt;impl tigris_and_euphrates::game::PlayerAction&gt;::generate_moves (112 samples, 1.97%)</title><rect x="97.9746%" y="229" width="1.9725%" height="15" fill="rgb(215,43,3)" fg:x="5563" fg:w="112"/><text x="98.2246%" y="239.50">t..</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::neighboring_kingdoms (39 samples, 0.69%)</title><rect x="99.2603%" y="213" width="0.6869%" height="15" fill="rgb(238,154,13)" fg:x="5636" fg:w="39"/><text x="99.5103%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (30 samples, 0.53%)</title><rect x="99.4188%" y="197" width="0.5284%" height="15" fill="rgb(219,56,2)" fg:x="5645" fg:w="30"/><text x="99.6688%" y="207.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (13 samples, 0.23%)</title><rect x="99.7182%" y="181" width="0.2290%" height="15" fill="rgb(233,0,4)" fg:x="5662" fg:w="13"/><text x="99.9682%" y="191.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Bitboard::get (2 samples, 0.04%)</title><rect x="99.9119%" y="165" width="0.0352%" height="15" fill="rgb(235,30,7)" fg:x="5673" fg:w="2"/><text x="100.1619%" y="175.50"></text></g><g><title>tigris-and-euphrates`minimax::util::MovePool&lt;M&gt;::free (1 samples, 0.02%)</title><rect x="99.9472%" y="245" width="0.0176%" height="15" fill="rgb(250,79,13)" fg:x="5675" fg:w="1"/><text x="100.1972%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="99.9472%" y="229" width="0.0176%" height="15" fill="rgb(211,146,34)" fg:x="5675" fg:w="1"/><text x="100.1972%" y="239.50"></text></g><g><title>tigris-and-euphrates`&lt;minimax::strategies::negamax::Negamax&lt;E&gt; as minimax::interface::Strategy&lt;&lt;E as minimax::interface::Evaluator&gt;::G&gt;&gt;::choose_move (5,677 samples, 99.98%)</title><rect x="0.0000%" y="261" width="99.9824%" height="15" fill="rgb(228,22,38)" fg:x="0" fg:w="5677"/><text x="0.2500%" y="271.50">tigris-and-euphrates`&lt;minimax::strategies::negamax::Negamax&lt;E&gt; as minimax::interface::Strategy&lt;&lt;E as minimax::interface::Evaluator&gt;::G&gt;&gt;::choose_move</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::solver::_&lt;impl tigris_and_euphrates::game::PlayerAction&gt;::generate_moves (1 samples, 0.02%)</title><rect x="99.9648%" y="245" width="0.0176%" height="15" fill="rgb(235,168,5)" fg:x="5676" fg:w="1"/><text x="100.2148%" y="255.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::neighboring_kingdoms (1 samples, 0.02%)</title><rect x="99.9648%" y="229" width="0.0176%" height="15" fill="rgb(221,155,16)" fg:x="5676" fg:w="1"/><text x="100.2148%" y="239.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::find_kingdom (1 samples, 0.02%)</title><rect x="99.9648%" y="213" width="0.0176%" height="15" fill="rgb(215,215,53)" fg:x="5676" fg:w="1"/><text x="100.2148%" y="223.50"></text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::game::Board::is_connectable (1 samples, 0.02%)</title><rect x="99.9648%" y="197" width="0.0176%" height="15" fill="rgb(223,4,10)" fg:x="5676" fg:w="1"/><text x="100.2148%" y="207.50"></text></g><g><title>all (5,678 samples, 100%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="5678"/><text x="0.2500%" y="383.50"></text></g><g><title>dyld`start (5,678 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(227,97,0)" fg:x="0" fg:w="5678"/><text x="0.2500%" y="367.50">dyld`start</text></g><g><title>tigris-and-euphrates`main (5,678 samples, 100.00%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="5678"/><text x="0.2500%" y="351.50">tigris-and-euphrates`main</text></g><g><title>tigris-and-euphrates`std::rt::lang_start_internal (5,678 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(228,201,54)" fg:x="0" fg:w="5678"/><text x="0.2500%" y="335.50">tigris-and-euphrates`std::rt::lang_start_internal</text></g><g><title>tigris-and-euphrates`std::rt::lang_start::_{{closure}} (5,678 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(222,22,37)" fg:x="0" fg:w="5678"/><text x="0.2500%" y="319.50">tigris-and-euphrates`std::rt::lang_start::_{{closure}}</text></g><g><title>tigris-and-euphrates`std::sys_common::backtrace::__rust_begin_short_backtrace (5,678 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(237,53,32)" fg:x="0" fg:w="5678"/><text x="0.2500%" y="303.50">tigris-and-euphrates`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tigris-and-euphrates`tigris_and_euphrates::main (5,678 samples, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(233,25,53)" fg:x="0" fg:w="5678"/><text x="0.2500%" y="287.50">tigris-and-euphrates`tigris_and_euphrates::main</text></g><g><title>tigris-and-euphrates`std::io::stdio::_print (1 samples, 0.02%)</title><rect x="99.9824%" y="261" width="0.0176%" height="15" fill="rgb(210,40,34)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="271.50"></text></g><g><title>tigris-and-euphrates`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="245" width="0.0176%" height="15" fill="rgb(241,220,44)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="255.50"></text></g><g><title>tigris-and-euphrates`core::fmt::write (1 samples, 0.02%)</title><rect x="99.9824%" y="229" width="0.0176%" height="15" fill="rgb(235,28,35)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="239.50"></text></g><g><title>tigris-and-euphrates`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="213" width="0.0176%" height="15" fill="rgb(210,56,17)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="223.50"></text></g><g><title>tigris-and-euphrates`core::fmt::Formatter::debug_struct_field2_finish (1 samples, 0.02%)</title><rect x="99.9824%" y="197" width="0.0176%" height="15" fill="rgb(224,130,29)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="207.50"></text></g><g><title>tigris-and-euphrates`core::fmt::builders::DebugStruct::field (1 samples, 0.02%)</title><rect x="99.9824%" y="181" width="0.0176%" height="15" fill="rgb(235,212,8)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="191.50"></text></g><g><title>tigris-and-euphrates`&lt;tigris_and_euphrates::game::Movement as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="165" width="0.0176%" height="15" fill="rgb(223,33,50)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="175.50"></text></g><g><title>tigris-and-euphrates`core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.02%)</title><rect x="99.9824%" y="149" width="0.0176%" height="15" fill="rgb(219,149,13)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="159.50"></text></g><g><title>tigris-and-euphrates`core::fmt::builders::DebugTuple::field (1 samples, 0.02%)</title><rect x="99.9824%" y="133" width="0.0176%" height="15" fill="rgb(250,156,29)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="143.50"></text></g><g><title>tigris-and-euphrates`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="117" width="0.0176%" height="15" fill="rgb(216,193,19)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="127.50"></text></g><g><title>tigris-and-euphrates`core::fmt::Formatter::write_fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="101" width="0.0176%" height="15" fill="rgb(216,135,14)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="111.50"></text></g><g><title>tigris-and-euphrates`core::fmt::write (1 samples, 0.02%)</title><rect x="99.9824%" y="85" width="0.0176%" height="15" fill="rgb(241,47,5)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="95.50"></text></g><g><title>tigris-and-euphrates`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="69" width="0.0176%" height="15" fill="rgb(233,42,35)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="79.50"></text></g><g><title>tigris-and-euphrates`core::fmt::Formatter::write_fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="53" width="0.0176%" height="15" fill="rgb(231,13,6)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="63.50"></text></g><g><title>tigris-and-euphrates`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.02%)</title><rect x="99.9824%" y="37" width="0.0176%" height="15" fill="rgb(207,181,40)" fg:x="5677" fg:w="1"/><text x="100.2324%" y="47.50"></text></g></svg></svg>